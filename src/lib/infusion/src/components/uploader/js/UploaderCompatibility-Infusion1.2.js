var fluid_2_0_0=fluid_2_0_0||{};!function(fluid){"use strict";fluid.registerNamespace("fluid.compat.fluid_1_2.uploader"),fluid.contextAware.makeChecks({"fluid.uploader.requiredApi":{value:"fluid_1_2"}}),fluid.compat.fluid_1_2.uploader.optionsRules={components:{transform:[{type:"fluid.transforms.value",inputPath:"components",outputPath:"",merge:!0},{type:"fluid.transforms.value",outputPath:"",merge:!0,value:{transform:[{type:"fluid.transforms.value",outputPath:"strategy.options.styles",inputPath:"decorators.0.options.styles"},{type:"fluid.transforms.value",inputPath:"fileQueueView",outputPath:"fileQueueView"},{type:"fluid.transforms.value",inputPath:"totalProgressBar",outputPath:"totalProgressBar"}]}}]},queueSettings:{transform:{type:"fluid.transforms.firstValue",values:["queueSettings","uploadManager.options"]}},invokers:"invokers",demo:"demo",selectors:"selectors",focusWithEvent:"focusWithEvent",styles:"styles",listeners:"listeners",strings:"strings",mergePolicy:"mergePolicy"},fluid.defaults("fluid.uploader.compatibility.1_2",{transformOptions:{transformer:"fluid.model.transformWithRules",config:fluid.compat.fluid_1_2.uploader.optionsRules}}),fluid.defaults("fluid.uploader.compatibility.distributor.1_3",{distributeOptions:{record:{"1_2":{contextValue:"{fluid.uploader.requiredApi}.options.value",equals:"fluid_1_2",gradeNames:"fluid.uploader.compatibility.1_2"}},target:"{/ fluid.uploader}.options.contextAwareness.apiCompatibility.checks"}}),fluid.constructSingle([],{singleRootType:"fluid.uploader.compatibility.distributor",type:"fluid.uploader.compatibility.distributor.1_3"})}(fluid_2_0_0);