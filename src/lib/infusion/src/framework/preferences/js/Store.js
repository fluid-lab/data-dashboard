var fluid_2_0_0=fluid_2_0_0||{};!function($,fluid){"use strict";fluid.defaults("fluid.prefs.dataSource",{gradeNames:["fluid.component"],invokers:{get:"fluid.notImplemented",set:"fluid.notImplemented"}}),fluid.defaults("fluid.prefs.store",{gradeNames:["fluid.prefs.dataSource","fluid.contextAware"],contextAwareness:{strategy:{defaultGradeNames:"fluid.prefs.cookieStore"}}}),fluid.defaults("fluid.prefs.cookieStore",{gradeNames:["fluid.prefs.store"],cookie:{name:"fluid-ui-settings",path:"/",expires:""},invokers:{get:{funcName:"fluid.prefs.cookieStore.get",args:"{that}.options.cookie.name"},set:{funcName:"fluid.prefs.cookieStore.set",args:["{arguments}.0","{that}.options.cookie"]}}}),fluid.prefs.cookieStore.get=function(cookieName){var cookie=document.cookie;if(!(cookie.length<=0)){var cookiePrefix=cookieName+"=",startIndex=cookie.indexOf(cookiePrefix);if(!(0>startIndex)){startIndex+=cookiePrefix.length;var endIndex=cookie.indexOf(";",startIndex);startIndex>endIndex&&(endIndex=cookie.length);var togo,cookieSection=cookie.substring(startIndex,endIndex);try{togo=JSON.parse(decodeURIComponent(cookieSection))}catch(e){fluid.log("Error parsing cookie "+cookieSection+" as JSON - clearing"),document.cookie=""}return togo}}},fluid.prefs.cookieStore.assembleCookie=function(cookieOptions){var cookieStr=cookieOptions.name+"="+cookieOptions.data;return cookieOptions.expires&&(cookieStr+="; expires="+cookieOptions.expires),cookieOptions.path&&(cookieStr+="; path="+cookieOptions.path),cookieStr},fluid.prefs.cookieStore.set=function(settings,cookieOptions){cookieOptions.data=encodeURIComponent(JSON.stringify(settings)),document.cookie=fluid.prefs.cookieStore.assembleCookie(cookieOptions)},fluid.defaults("fluid.prefs.tempStore",{gradeNames:["fluid.prefs.store","fluid.modelComponent"],invokers:{get:{funcName:"fluid.identity",args:"{that}.model"},set:{funcName:"fluid.prefs.tempStore.set",args:["{arguments}.0","{that}.applier"]}}}),fluid.prefs.tempStore.set=function(settings,applier){applier.fireChangeRequest({path:"",type:"DELETE"}),applier.change("",settings)},fluid.defaults("fluid.prefs.globalSettingsStore",{gradeNames:["fluid.component"],components:{settingsStore:{type:"fluid.prefs.store",options:{gradeNames:["fluid.resolveRootSingle"],singleRootType:"fluid.prefs.store"}}}})}(jQuery,fluid_2_0_0);